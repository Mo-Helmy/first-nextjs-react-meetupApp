{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\helmy\\\\OneDrive\\\\Desktop\\\\06-bigger-nextjs-app-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://mo-diab:Hope2022@cluster0.akwnsty.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetupIdList = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(meetupIdList);\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupIdList.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect(\"mongodb+srv://mo-diab:Hope2022@cluster0.akwnsty.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  console.log(meetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        image: meetup.image,\n        id: {\n          meetupId\n        },\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["C:/Users/helmy/OneDrive/Desktop/06-bigger-nextjs-app-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetailPage","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetupIdList","find","_id","toArray","console","log","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,iGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,YAAY,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAA3B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AAEAL,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAER,YAAY,CAACS,GAAb,CAAkBC,MAAD,KAAa;AACnCC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACR,GAAP,CAAWW,QAAX;AADJ;AAD2B,KAAb,CAAjB;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAR,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AAEA,QAAMjB,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,iGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMW,MAAM,GAAG,MAAMZ,gBAAgB,CAACkB,OAAjB,CAAyB;AAAEd,IAAAA,GAAG,EAAEU;AAAP,GAAzB,CAArB;AAEAR,EAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AAEAf,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAEoB,MAAM,CAACpB,KADJ;AAEV2B,QAAAA,EAAE,EAAE;AAAEL,UAAAA;AAAF,SAFM;AAGVrB,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KAHJ;AAIVC,QAAAA,OAAO,EAAEkB,MAAM,CAAClB,OAJN;AAKVC,QAAAA,WAAW,EAAEiB,MAAM,CAACjB;AALV;AADP;AADF,GAAP;AAWD;AAED,eAAeN,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst MeetupDetailPage = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mo-diab:Hope2022@cluster0.akwnsty.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const meetupIdList = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  console.log(meetupIdList);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetupIdList.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mo-diab:Hope2022@cluster0.akwnsty.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  const meetup = await meetupCollection.findOne({ _id: meetupId });\r\n\r\n  console.log(meetup);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image: meetup.image,\r\n        id: { meetupId },\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}